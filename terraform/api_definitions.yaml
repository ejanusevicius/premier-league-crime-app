openapi: 3.0.1
paths:
  '/get-list-of-stadiums':
    get:
      x-amazon-apigateway-integration:
        type: aws_proxy
        credentials: '${api_gateway_execution_role}'
        uri: '${get_list_of_stadiums_uri}'
        httpMethod: POST
    options:
      responses:
        '200':
          description: 200 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/Empty'
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        type: mock
  '/get-crimes-for-stadium':
    get:
      x-amazon-apigateway-integration:
        type: aws_proxy
        credentials: '${api_gateway_execution_role}'
        uri: '${get_crimes_for_stadium_uri}'
        httpMethod: POST
    options:
      responses:
        '200':
          description: 200 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/Empty'
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        passthroughBehavior: when_no_match
        requestTemplates:
          application/json: '{"statusCode": 200}'
        type: mock
components:
  schemas:
    Empty:
      title: Empty Schema
      type: object
    APIResponse:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
        data:
          type: array
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      name: x-api-key
      in: header